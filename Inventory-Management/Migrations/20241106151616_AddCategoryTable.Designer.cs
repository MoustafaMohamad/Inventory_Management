//// <auto-generated />
//using Inventory_Management.Data;
//using Microsoft.EntityFrameworkCore;
//using Microsoft.EntityFrameworkCore.Infrastructure;
//using Microsoft.EntityFrameworkCore.Migrations;

//#nullable disable

//namespace Inventory_Management.Migrations
//{
//    [DbContext(typeof(Context))]
//    [Migration("20241103174102_AddCategoryTable")]
//    //
//    //20241106151616
//    partial class AddCategoryTable
//    {
//        /// <inheritdoc />
//        protected override void BuildTargetModel(ModelBuilder modelBuilder)
//        {
//#pragma warning disable 612, 618
//            modelBuilder
//                .HasAnnotation("ProductVersion", "8.0.10")
//                .HasAnnotation("Relational:MaxIdentifierLength", 128);

//            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

//            modelBuilder.Entity("Inventory_Management.Entities.Admin", b =>
//                {
//                    b.Property<int>("ID")
//                        .ValueGeneratedOnAdd()
//                        .HasColumnType("int");

//                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

//                    b.Property<string>("FirstName")
//                        .IsRequired()
//                        .HasColumnType("nvarchar(max)");

//                    b.Property<bool>("IsDeleted")
//                        .HasColumnType("bit");

//                    b.Property<string>("LastName")
//                        .IsRequired()
//                        .HasColumnType("nvarchar(max)");

//                    b.Property<int>("UserId")
//                        .HasColumnType("int");

//                    b.HasKey("ID");

//                    b.HasIndex("UserId");

//                    b.ToTable("Admins");
//                });

//            modelBuilder.Entity("Inventory_Management.Entities.Category", b =>
//                {
//                    b.Property<int>("ID")
//                        .ValueGeneratedOnAdd()
//                        .HasColumnType("int");

//                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

//                    b.Property<bool>("IsDeleted")
//                        .HasColumnType("bit");

//                    b.Property<string>("Name")
//                        .IsRequired()
//                        .HasColumnType("nvarchar(max)");

//                    b.HasKey("ID");

//                    b.ToTable("Categories");

//                    b.HasData(
//                        new
//                        {
//                            ID = 1,
//                            IsDeleted = false,
//                            Name = "Snacks & Sweets"
//                        },
//                        new
//                        {
//                            ID = 2,
//                            IsDeleted = false,
//                            Name = "Devices"
//                        },
//                        new
//                        {
//                            ID = 3,
//                            IsDeleted = false,
//                            Name = "Grocery"
//                        },
//                        new
//                        {
//                            ID = 4,
//                            IsDeleted = false,
//                            Name = "Clothes"
//                        },
//                        new
//                        {
//                            ID = 5,
//                            IsDeleted = false,
//                            Name = "Others"
//                        });
//                });

//            modelBuilder.Entity("Inventory_Management.Entities.InventoryTransaction", b =>
//                {
//                    b.Property<int>("ID")
//                        .ValueGeneratedOnAdd()
//                        .HasColumnType("int");

//                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

//                    b.Property<DateTime>("Date")
//                        .HasColumnType("datetime2");

//                    b.Property<bool>("IsDeleted")
//                        .HasColumnType("bit");

//                    b.Property<int>("ProductId")
//                        .HasColumnType("int");

//                    b.Property<int>("Quantity")
//                        .HasColumnType("int");

//                    b.Property<int>("TransactionType")
//                        .HasColumnType("int");

//                    b.Property<int>("UserId")
//                        .HasColumnType("int");

//                    b.HasKey("ID");

//                    b.HasIndex("ProductId");

//                    b.HasIndex("UserId");

//                    b.ToTable("InventoryTransactions");
//                });

//            modelBuilder.Entity("Inventory_Management.Entities.OtpVerification", b =>
//                {
//                    b.Property<int>("ID")
//                        .ValueGeneratedOnAdd()
//                        .HasColumnType("int");

//                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

//                    b.Property<string>("Email")
//                        .IsRequired()
//                        .HasColumnType("nvarchar(max)");

//                    b.Property<DateTime>("ExpiryTime")
//                        .HasColumnType("datetime2");

//                    b.Property<bool>("IsDeleted")
//                        .HasColumnType("bit");

//                    b.Property<string>("Otp")
//                        .IsRequired()
//                        .HasColumnType("nvarchar(max)");

//                    b.HasKey("ID");

//                    b.ToTable("Otps");
//                });

//            modelBuilder.Entity("Inventory_Management.Entities.Product", b =>
//                {
//                    b.Property<int>("ID")
//                        .ValueGeneratedOnAdd()
//                        .HasColumnType("int");

//                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

//                    b.Property<int>("Available")
//                        .HasColumnType("int");

//                    b.Property<int>("CategoryID")
//                        .HasColumnType("int");

//                    b.Property<DateTime>("CreatedAt")
//                        .HasColumnType("datetime2");

//                    b.Property<DateTime>("ExpiryDate")
//                        .HasColumnType("datetime2");

//                    b.Property<string>("ImageUrl")
//                        .IsRequired()
//                        .HasColumnType("nvarchar(max)");

//                    b.Property<bool>("IsDeleted")
//                        .HasColumnType("bit");

//                    b.Property<string>("Name")
//                        .IsRequired()
//                        .HasColumnType("nvarchar(max)");

//                    b.Property<decimal>("Price")
//                        .HasColumnType("decimal(18,2)");

//                    b.Property<int>("Quantity")
//                        .HasColumnType("int");

//                    b.Property<int>("Threshold")
//                        .HasColumnType("int");

//                    b.Property<string>("Unit")
//                        .IsRequired()
//                        .HasColumnType("nvarchar(max)");

//                    b.HasKey("ID");

//                    b.HasIndex("CategoryID");

//                    b.ToTable("Products");

//                    b.HasData(
//                        new
//                        {
//                            ID = 1,
//                            Available = 0,
//                            CategoryID = 3,
//                            CreatedAt = new DateTime(2024, 11, 6, 15, 16, 15, 926, DateTimeKind.Utc).AddTicks(6477),
//                            ExpiryDate = new DateTime(2025, 10, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
//                            ImageUrl = "http://res.cloudinary.com/dpapfkrx1/image/upload/v1730568418/maggi-noodles-1000x1000.jpg",
//                            IsDeleted = false,
//                            Name = "Maggi",
//                            Price = 12m,
//                            Quantity = 50,
//                            Threshold = 22,
//                            Unit = "g1"
//                        },
//                        new
//                        {
//                            ID = 2,
//                            Available = 0,
//                            CategoryID = 1,
//                            CreatedAt = new DateTime(2024, 11, 6, 15, 16, 15, 926, DateTimeKind.Utc).AddTicks(6482),
//                            ExpiryDate = new DateTime(2025, 11, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
//                            ImageUrl = "http://res.cloudinary.com/dpapfkrx1/image/upload/v1730568627/6223000508572_-_37g.webp",
//                            IsDeleted = false,
//                            Name = "Tiger",
//                            Price = 7m,
//                            Quantity = 40,
//                            Threshold = 20,
//                            Unit = "g1"
//                        },
//                        new
//                        {
//                            ID = 3,
//                            Available = 2,
//                            CategoryID = 5,
//                            CreatedAt = new DateTime(2024, 11, 6, 15, 16, 15, 926, DateTimeKind.Utc).AddTicks(6485),
//                            ExpiryDate = new DateTime(2026, 10, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
//                            ImageUrl = "http://res.cloudinary.com/dpapfkrx1/image/upload/v1730656198/caregory.jpg",
//                            IsDeleted = false,
//                            Name = "dexdece",
//                            Price = 250m,
//                            Quantity = 7,
//                            Threshold = 5,
//                            Unit = "g1"
//                        },
//                        new
//                        {
//                            ID = 4,
//                            Available = 1,
//                            CategoryID = 5,
//                            CreatedAt = new DateTime(2024, 11, 6, 15, 16, 15, 926, DateTimeKind.Utc).AddTicks(6488),
//                            ExpiryDate = new DateTime(2025, 1, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
//                            ImageUrl = "http://res.cloudinary.com/dpapfkrx1/image/upload/v1730658274/01d4fdc0e786083bd7002de356fb29c3.jpg",
//                            IsDeleted = false,
//                            Name = "product2",
//                            Price = 100m,
//                            Quantity = 12,
//                            Threshold = 22,
//                            Unit = "g1"
//                        });
//                });

//            modelBuilder.Entity("Inventory_Management.Entities.Role", b =>
//                {
//                    b.Property<int>("ID")
//                        .ValueGeneratedOnAdd()
//                        .HasColumnType("int");

//                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

//                    b.Property<bool>("IsDeleted")
//                        .HasColumnType("bit");

//                    b.Property<string>("Name")
//                        .IsRequired()
//                        .HasColumnType("nvarchar(max)");

//                    b.HasKey("ID");

//                    b.ToTable("Roles");
//                });

//            modelBuilder.Entity("Inventory_Management.Entities.RoleFeature", b =>
//                {
//                    b.Property<int>("ID")
//                        .ValueGeneratedOnAdd()
//                        .HasColumnType("int");

//                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

//                    b.Property<int>("Feature")
//                        .HasColumnType("int");

//                    b.Property<int>("FeatureId")
//                        .HasColumnType("int");

//                    b.Property<bool>("IsDeleted")
//                        .HasColumnType("bit");

//                    b.Property<int>("RoleId")
//                        .HasColumnType("int");

//                    b.HasKey("ID");

//                    b.HasIndex("RoleId");

//                    b.ToTable("RoleFeatures");
//                });

//            modelBuilder.Entity("Inventory_Management.Entities.User", b =>
//                {
//                    b.Property<int>("ID")
//                        .ValueGeneratedOnAdd()
//                        .HasColumnType("int");

//                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

//                    b.Property<DateTime>("CreationAt")
//                        .HasColumnType("datetime2");

//                    b.Property<string>("Email")
//                        .IsRequired()
//                        .HasColumnType("nvarchar(max)");

//                    b.Property<bool>("IsDeleted")
//                        .HasColumnType("bit");

//                    b.Property<DateTime?>("LastLogin")
//                        .HasColumnType("datetime2");

//                    b.Property<string>("Password")
//                        .IsRequired()
//                        .HasColumnType("nvarchar(max)");

//                    b.Property<int>("RoleID")
//                        .HasColumnType("int");

//                    b.Property<string>("UserName")
//                        .IsRequired()
//                        .HasColumnType("nvarchar(max)");

//                    b.HasKey("ID");

//                    b.HasIndex("RoleID");

//                    b.ToTable("Users");
//                });

//            modelBuilder.Entity("Inventory_Management.Entities.Admin", b =>
//                {
//                    b.HasOne("Inventory_Management.Entities.User", "User")
//                        .WithMany()
//                        .HasForeignKey("UserId")
//                        .OnDelete(DeleteBehavior.Cascade)
//                        .IsRequired();

//                    b.Navigation("User");
//                });

//            modelBuilder.Entity("Inventory_Management.Entities.InventoryTransaction", b =>
//                {
//                    b.HasOne("Inventory_Management.Entities.Product", "Product")
//                        .WithMany()
//                        .HasForeignKey("ProductId")
//                        .OnDelete(DeleteBehavior.Cascade)
//                        .IsRequired();

//                    b.HasOne("Inventory_Management.Entities.User", "User")
//                        .WithMany()
//                        .HasForeignKey("UserId")
//                        .OnDelete(DeleteBehavior.Cascade)
//                        .IsRequired();

//                    b.Navigation("Product");

//                    b.Navigation("User");
//                });

//            modelBuilder.Entity("Inventory_Management.Entities.Product", b =>
//                {
//                    b.HasOne("Inventory_Management.Entities.Category", "Category")
//                        .WithMany()
//                        .HasForeignKey("CategoryID")
//                        .OnDelete(DeleteBehavior.Cascade)
//                        .IsRequired();

//                    b.Navigation("Category");
//                });

//            modelBuilder.Entity("Inventory_Management.Entities.RoleFeature", b =>
//                {
//                    b.HasOne("Inventory_Management.Entities.Role", "Role")
//                        .WithMany()
//                        .HasForeignKey("RoleId")
//                        .OnDelete(DeleteBehavior.Cascade)
//                        .IsRequired();

//                    b.Navigation("Role");
//                });

//            modelBuilder.Entity("Inventory_Management.Entities.User", b =>
//                {
//                    b.HasOne("Inventory_Management.Entities.Role", "Role")
//                        .WithMany()
//                        .HasForeignKey("RoleID")
//                        .OnDelete(DeleteBehavior.Cascade)
//                        .IsRequired();

//                    b.Navigation("Role");
//                });
//#pragma warning restore 612, 618
//        }
//    }
//}
